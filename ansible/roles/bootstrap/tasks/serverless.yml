- name: "wait for {{ serverless.eventing.namespace }} to be created"
  kubernetes.core.k8s_info:
    kind: Namespace
    name: "{{ serverless.eventing.namespace }}"
    wait: yes
    wait_sleep: 10
    wait_timeout: 360

- name: Wait until KNative Serving installation is complete
  k8s_info:
    api_version: operator.knative.dev/v1alpha1
    kind: KnativeServing
    name: knative-serving
    namespace: knative-serving
  register: r_kn_serving
  retries: 30
  delay: 10
  until:
  - r_kn_serving.resources[0].status.conditions[0].status is defined
  - r_kn_serving.resources[0].status.conditions[0].status == "True"
  - r_kn_serving.resources[0].status.conditions[1].status is defined
  - r_kn_serving.resources[0].status.conditions[1].status == "True"
  - r_kn_serving.resources[0].status.conditions[2].status is defined
  - r_kn_serving.resources[0].status.conditions[2].status == "True"
  - r_kn_serving.resources[0].status.conditions[3].status is defined
  - r_kn_serving.resources[0].status.conditions[3].status == "True"


#- name: Render serverless Helm Chart templates
#  kubernetes.core.helm_template:
#    chart_ref: "{{ helm.charts_dir }}/xraylab/{{ serverless.template_dir }}"
#    output_dir: "{{ helm.output_dir }}"
#    values_files:
#      - "{{ pattern_repo_dir}}/values-global.yaml"
#
#- name: Create the knative-servering and knative-eventing operators
#  kubernetes.core.k8s:
#    state: present
#    src: "{{ item }}"
#  with_fileglob:
#    - "{{ helm.output_dir }}/{{ serverless.template_dir }}/templates/*.yaml"
#
#- name: Render the kafka templates 
#  kubernetes.core.helm_template:
#    chart_ref: "{{ helm.charts_dir }}/xraylab/{{ kafka.template_dir }}"
#    output_dir: "{{ helm.output_dir }}"
#    values_files:
#      - "{{ pattern_repo_dir}}/values-global.yaml"
#
#- name: Render the kafkasource templates 
#  kubernetes.core.helm_template:
#    chart_ref: "{{ helm.charts_dir }}/xraylab/{{ kafkasource.template_dir }}"
#    output_dir: "{{ helm.output_dir }}"
#    values_files:
#      - "{{ pattern_repo_dir}}/values-global.yaml"
#
#- name: Apply the kafka manifests
#  kubernetes.core.k8s:
#    state: present
#    src: "{{ item }}"
#  with_fileglob:
#    - "{{ helm.output_dir }}/{{ kafka.template_dir }}/templates/*.yaml"
#
#- name: Apply the kafkasource manifests
#  kubernetes.core.k8s:
#    state: present
#    src: "{{ item }}"
#  loop:
#    - "{{ helm.output_dir }}/{{ kafkasource.template_dir }}/templates/xray-kafka-risk-assessment-is.yaml"
#    - "{{ helm.output_dir }}/{{ kafkasource.template_dir }}/templates/xray-kafka-risk-assessment-svc.yaml"
#    - "{{ helm.output_dir }}/{{ kafkasource.template_dir }}/templates/xray-kafka-risk-assessment-source.yaml"

#OpenShift Data Foundation - Cluster Storage
odf:
  namespace: openshift-storage
  serviceUrl: "http://rook-ceph-rgw-ocs-storagecluster-cephobjectstore.openshift-storage.svc.cluster.local"
  externalUrl: "https://s3-rgw-openshift-storage"
  targetBucket: com.redhat.jrickard.xray-source
  route:
    name: s3-rgw
    kind: Service
    serviceName: rook-ceph-rgw-ocs-storagecluster-cephobjectstore
    weight: 100
    port:
      targetPort: http
    tls:
      termination: edge
  mon:
    requests:
       cpu: 1
       memory: 2Gi
  mds:
    requests:
      cpu: 3
      memory: 8Gi
  mgr:
    requests:
      cpu: 1
      memory: 3Gi
  noobaacore:
    requests:
      cpu: 1
      memory: 4Gi
  noobaadb:
    requests:
      cpu: 1
      memory: 4Gi
  osd:
    requests:
      cpu: 2
      memory: 5Gi
    pvc:
      storage: 2Ti
  storageClass:
    name: ocs-storagecluster-ceph-rgw
    objectStoreName: ocs-storagecluster-cephobjectstore

objectStore:
  user: xraylab-1
  displayName: "XRaylab-1 RGW OCS User"

toolbox:
  name: ocsinit
  enableCephTools: true

rbac:
  createRBAC: true
  createRoleBinding: true
  roles:
  - name: odf-user-mgmt
    clusterRole: false
    clusterRoleBinding: false
    namespace: opesnhift-storage
    apiGroups:
    resources: secrets
    verbs:
    - '"get"'
    - '"list"'
    - '"watch"'
    binding:
      roleRef:
        kind: Role
      subjects:
        kind: ServiceAccount
        namespace: xraylab-1
        name: xraylab-sa
  - name: xraylab-mgmt
    clusterRole: false
    clusterRoleBinding: false
    namespace: xraylab-1
    apiGroups: 
    resources: secrets
    verbs:
    - '"get"'
    - '"list"'
    - '"watch"'
    - '"create"'
    - '"update"'
    - '"patch"'
    binding:
      kind: Role
      subjects:
        kind: ServiceAccount
        namespace: xraylab-1
        name: xraylab-sa
  serviceAccount: 
    name: xraylab-sa
    namespace: xraylab-1

job:
  name: odf-user-key-export
  namespace: xraylab-1
  image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
  serviceAccount: xraylab-sa
  serviceAccountName: xraylab-sa

#OpenDataHub Values

#Grafana Values
xraylab:
  #Commented out by jrickard - changed variable inside of template to use global value for clustername and domain
  #imageServer: https://image-server-xraylab-1.apps.jrickard-med-diag.blueprints.rhecoeng.com
  bucketBaseName: xraylab-1jrickard ~/medical-diagnosis/charts/datacenter/medical-diagnosis/templates/grafana 

#Kafka Values
kafka:
  app: "kafdrop"
  cluster:
    name: "xray-cluster"
    replicas: 3
  deployment:
    replicas: 1
    image: "obsidiandynamics/kafdrop:latest"
    env:
      - name: KAFKA_BROKERCONNECT
        value: "xray-cluster-kafka-0.xray-cluster-kafka-brokers.xraylab-1.svc:9092"
      - name: JVM_OPTS
        value: "-Xms32M -Xmx64M"
      - name: SERVER_SERVLET_CONTEXTPATH
        value: "/"
  route:
    subdomain: '""'
    weight: 100
    wildcardPolicy: "None"
  service:
    protocol: "TCP"
    port: 9000
    targetPort: 9000
  config:
    listeners:
    - name: plain
      port: 9092
      type: internal
      tls: false
    - name: tls
      port: 9093
      type: internal
      tls: true
    logFormatVersion: '2.8'
  version: 2.8.0
  replicas: 3
  storage:
    type: ephemeral
  topic:
    name: xray-images
    partitions: 1
    replicas: 1
    config:
      retentionMs: 604800000
      segmentBytes: 1073741824

zookeeper:
  replicas: 3
  storage:
    type: ephemeral

kafkaSource:
  bootstrapServer: "xray-cluster-kafka-bootstrap.xraylab-1.svc:9092"
  name: "xray-images"
  consumerGroup: "risk-assessment"

kafkaService:
  name: risk-assessment
  containers:
    image: quay.io/rh-data-services/xraylab-risk-assessment:latest
    ports:
      containerPort: 5000
    resources:
      limits:
        cpu: '2'
        memory: 500M
      requests:
        cpu: 400m
        memory: 100M

#Knative Values
knative:
  operators:
    - kind: "KnativeServing"
      name: "knative-serving"
      namespace: "knative-serving"
    - kind: "KnativeEventing"
      name: "knative-eventing"
      namespace: "knative-eventing"
    - kind: "KnativeKafka"
      name: "knative-kafka"
      namespace: "knative-eventing"
  kafkaSource:
    bootstrapserver: "xray-cluster-kafka-bootstrap.xraylab-1.svc:9092"

#Demo Values
kafkaSource:
  bootstrapserver: "xray-cluster-kafka-bootstrap.xraylab-1.svc:9092"

#Image Server Values
s3:
  bucketSource: 
  bucketBaseName: "xraylab-1"

#Changing to ODF vs OCS
odf:
  serviceUrl: "http://rook-ceph-rgw-ocs-storagecluster-cephobjectstore.openshift-storage.svc.cluster.local"
  externalUrl: "https://s3-rgw-openshift-storage"
  targetBucket: com.redhat.jrickard.xray-source

#XrayDB Values
xraydb:
  service:
    name: xraylabdb
    ports:
      name: mariadb
      protocol: TCP
      port: 3306
      targetPort: 3306
    selector:
      app: xraylabdb
  database:
    url: xraylabdb

